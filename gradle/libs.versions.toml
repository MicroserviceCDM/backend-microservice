# This file was generated by the Gradle 'init' task.
# https://docs.gradle.org/current/userguide/platforms.html#sub::toml-dependencies-format

[versions]
com-cloudinary-cloudinary-http45 = "1.33.0"
io-jsonwebtoken-jjwt-api = "0.11.5"
io-jsonwebtoken-jjwt-impl = "0.11.5"
io-jsonwebtoken-jjwt-jackson = "0.11.5"
io-micrometer-micrometer-tracing-bridge-brave = "1.1.6"
io-zipkin-reporter2-zipkin-reporter-brave = "2.16.3"
jakarta-persistence-jakarta-persistence-api = "3.1.0"
jakarta-transaction-jakarta-transaction-api = "2.0.1"
junit-junit = "4.13.2"
org-hibernate-orm-hibernate-core = "6.2.13.Final"
org-projectlombok-lombok = "1.18.30"
org-springframework-boot-spring-boot-devtools = "3.1.5"
org-springframework-boot-spring-boot-starter-actuator = "3.1.5"
org-springframework-boot-spring-boot-starter-data-mongodb = "3.1.5"
org-springframework-boot-spring-boot-starter-mail = "3.1.5"
org-springframework-boot-spring-boot-starter-oauth2-client = "3.1.5"
org-springframework-boot-spring-boot-starter-security = "3.1.5"
org-springframework-boot-spring-boot-starter-test = "3.1.5"
org-springframework-boot-spring-boot-starter-validation = "3.1.5"
org-springframework-boot-spring-boot-starter-web = "3.1.5"
org-springframework-boot-spring-boot-starter-webflux = "3.1.5"
org-springframework-boot-spring-boot-starter-websocket = "3.1.5"
org-springframework-cloud-spring-cloud-config-server = "4.0.4"
org-springframework-cloud-spring-cloud-starter-circuitbreaker-resilience4j = "3.0.3"
org-springframework-cloud-spring-cloud-starter-config = "4.0.4"
org-springframework-cloud-spring-cloud-starter-gateway = "4.0.7"
org-springframework-cloud-spring-cloud-starter-netflix-eureka-client = "4.0.3"
org-springframework-cloud-spring-cloud-starter-netflix-eureka-server = "4.0.3"
org-springframework-cloud-spring-cloud-starter-openfeign = "4.0.4"
org-springframework-kafka-spring-kafka = "3.0.12"
org-springframework-kafka-spring-kafka-test = "3.0.12"

[libraries]
com-cloudinary-cloudinary-http45 = { module = "com.cloudinary:cloudinary-http45", version.ref = "com-cloudinary-cloudinary-http45" }
io-jsonwebtoken-jjwt-api = { module = "io.jsonwebtoken:jjwt-api", version.ref = "io-jsonwebtoken-jjwt-api" }
io-jsonwebtoken-jjwt-impl = { module = "io.jsonwebtoken:jjwt-impl", version.ref = "io-jsonwebtoken-jjwt-impl" }
io-jsonwebtoken-jjwt-jackson = { module = "io.jsonwebtoken:jjwt-jackson", version.ref = "io-jsonwebtoken-jjwt-jackson" }
io-micrometer-micrometer-tracing-bridge-brave = { module = "io.micrometer:micrometer-tracing-bridge-brave", version.ref = "io-micrometer-micrometer-tracing-bridge-brave" }
io-zipkin-reporter2-zipkin-reporter-brave = { module = "io.zipkin.reporter2:zipkin-reporter-brave", version.ref = "io-zipkin-reporter2-zipkin-reporter-brave" }
jakarta-persistence-jakarta-persistence-api = { module = "jakarta.persistence:jakarta.persistence-api", version.ref = "jakarta-persistence-jakarta-persistence-api" }
jakarta-transaction-jakarta-transaction-api = { module = "jakarta.transaction:jakarta.transaction-api", version.ref = "jakarta-transaction-jakarta-transaction-api" }
junit-junit = { module = "junit:junit", version.ref = "junit-junit" }
org-hibernate-orm-hibernate-core = { module = "org.hibernate.orm:hibernate-core", version.ref = "org-hibernate-orm-hibernate-core" }
org-projectlombok-lombok = { module = "org.projectlombok:lombok", version.ref = "org-projectlombok-lombok" }
org-springframework-boot-spring-boot-devtools = { module = "org.springframework.boot:spring-boot-devtools", version.ref = "org-springframework-boot-spring-boot-devtools" }
org-springframework-boot-spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "org-springframework-boot-spring-boot-starter-actuator" }
org-springframework-boot-spring-boot-starter-data-mongodb = { module = "org.springframework.boot:spring-boot-starter-data-mongodb", version.ref = "org-springframework-boot-spring-boot-starter-data-mongodb" }
org-springframework-boot-spring-boot-starter-mail = { module = "org.springframework.boot:spring-boot-starter-mail", version.ref = "org-springframework-boot-spring-boot-starter-mail" }
org-springframework-boot-spring-boot-starter-oauth2-client = { module = "org.springframework.boot:spring-boot-starter-oauth2-client", version.ref = "org-springframework-boot-spring-boot-starter-oauth2-client" }
org-springframework-boot-spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "org-springframework-boot-spring-boot-starter-security" }
org-springframework-boot-spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "org-springframework-boot-spring-boot-starter-test" }
org-springframework-boot-spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "org-springframework-boot-spring-boot-starter-validation" }
org-springframework-boot-spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "org-springframework-boot-spring-boot-starter-web" }
org-springframework-boot-spring-boot-starter-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux", version.ref = "org-springframework-boot-spring-boot-starter-webflux" }
org-springframework-boot-spring-boot-starter-websocket = { module = "org.springframework.boot:spring-boot-starter-websocket", version.ref = "org-springframework-boot-spring-boot-starter-websocket" }
org-springframework-cloud-spring-cloud-config-server = { module = "org.springframework.cloud:spring-cloud-config-server", version.ref = "org-springframework-cloud-spring-cloud-config-server" }
org-springframework-cloud-spring-cloud-starter-circuitbreaker-resilience4j = { module = "org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j", version.ref = "org-springframework-cloud-spring-cloud-starter-circuitbreaker-resilience4j" }
org-springframework-cloud-spring-cloud-starter-config = { module = "org.springframework.cloud:spring-cloud-starter-config", version.ref = "org-springframework-cloud-spring-cloud-starter-config" }
org-springframework-cloud-spring-cloud-starter-gateway = { module = "org.springframework.cloud:spring-cloud-starter-gateway", version.ref = "org-springframework-cloud-spring-cloud-starter-gateway" }
org-springframework-cloud-spring-cloud-starter-netflix-eureka-client = { module = "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client", version.ref = "org-springframework-cloud-spring-cloud-starter-netflix-eureka-client" }
org-springframework-cloud-spring-cloud-starter-netflix-eureka-server = { module = "org.springframework.cloud:spring-cloud-starter-netflix-eureka-server", version.ref = "org-springframework-cloud-spring-cloud-starter-netflix-eureka-server" }
org-springframework-cloud-spring-cloud-starter-openfeign = { module = "org.springframework.cloud:spring-cloud-starter-openfeign", version.ref = "org-springframework-cloud-spring-cloud-starter-openfeign" }
org-springframework-kafka-spring-kafka = { module = "org.springframework.kafka:spring-kafka", version.ref = "org-springframework-kafka-spring-kafka" }
org-springframework-kafka-spring-kafka-test = { module = "org.springframework.kafka:spring-kafka-test", version.ref = "org-springframework-kafka-spring-kafka-test" }
